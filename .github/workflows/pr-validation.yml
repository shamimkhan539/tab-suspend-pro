name: Pull Request Validation

on:
    pull_request:
        branches:
            - master
        types: [opened, synchronize, reopened]

jobs:
    pr-validation:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Get version info
              id: version
              run: |
                  MANIFEST_VERSION=$(grep -o '"version": "[^"]*"' manifest.json | grep -o '[0-9.]*')
                  echo "version=v$MANIFEST_VERSION" >> $GITHUB_OUTPUT
                  echo "manifest_version=$MANIFEST_VERSION" >> $GITHUB_OUTPUT

            - name: Check if version was updated
              id: version_check
              run: |
                  git fetch origin master
                  OLD_VERSION=$(git show origin/master:manifest.json | grep -o '"version": "[^"]*"' | grep -o '[0-9.]*')
                  NEW_VERSION="${{ steps.version.outputs.manifest_version }}"

                  echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
                  echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

                  if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
                    echo "version_changed=true" >> $GITHUB_OUTPUT
                    echo "🔄 Version changed: $OLD_VERSION → $NEW_VERSION"
                  else
                    echo "version_changed=false" >> $GITHUB_OUTPUT
                    echo "📋 Version unchanged: $NEW_VERSION"
                  fi

            - name: Validate manifest.json
              run: |
                  echo "🔍 Validating manifest.json..."
                  if ! cat manifest.json | python -m json.tool > /dev/null 2>&1; then
                    echo "❌ manifest.json is not valid JSON"
                    exit 1
                  fi
                  echo "✅ manifest.json is valid JSON"

            - name: Check all required files
              run: |
                  echo "🔍 Checking required files..."
                  required_files=("manifest.json" "background.js" "content.js" "popup.html" "popup.js" "options.html" "options.js" "suspended.html" "suspended.js")
                  missing_files=()

                  for file in "${required_files[@]}"; do
                    if [ ! -f "$file" ]; then
                      missing_files+=("$file")
                      echo "❌ Missing: $file"
                    else
                      echo "✅ Found: $file"
                    fi
                  done

                  if [ ${#missing_files[@]} -gt 0 ]; then
                    echo "❌ Missing required files: ${missing_files[*]}"
                    exit 1
                  fi

            - name: Validate JavaScript syntax
              run: |
                  echo "🔍 Checking JavaScript syntax..."
                  js_files=("background.js" "content.js" "popup.js" "options.js" "suspended.js")
                  syntax_errors=()

                  for file in "${js_files[@]}"; do
                    if ! node -c "$file" 2>/dev/null; then
                      syntax_errors+=("$file")
                      echo "❌ Syntax error in: $file"
                    else
                      echo "✅ Syntax OK: $file"
                    fi
                  done

                  if [ ${#syntax_errors[@]} -gt 0 ]; then
                    echo "❌ JavaScript syntax errors found in: ${syntax_errors[*]}"
                    exit 1
                  fi

            - name: Check icons
              run: |
                  echo "🔍 Checking icon files..."
                  required_icons=("icons/icon16.png" "icons/icon32.png" "icons/icon48.png" "icons/icon128.png")
                  missing_icons=()

                  for icon in "${required_icons[@]}"; do
                    if [ ! -f "$icon" ]; then
                      missing_icons+=("$icon")
                      echo "❌ Missing: $icon"
                    else
                      echo "✅ Found: $icon"
                    fi
                  done

                  if [ ${#missing_icons[@]} -gt 0 ]; then
                    echo "❌ Missing required icons: ${missing_icons[*]}"
                    exit 1
                  fi

            - name: Test build creation
              run: |
                  echo "🔨 Testing build creation..."
                  mkdir -p pr-build-test

                  cp manifest.json pr-build-test/
                  cp *.js pr-build-test/
                  cp *.html pr-build-test/
                  cp -r icons pr-build-test/
                  cp LICENSE pr-build-test/ 2>/dev/null || echo "LICENSE file not found, skipping"

                  echo "✅ Build test successful"

            - name: PR Summary
              run: |
                  echo "## 📋 Pull Request Validation Summary"
                  echo ""
                  echo "**Current Version:** ${{ steps.version.outputs.version }}"
                  echo "**Version Changed:** ${{ steps.version_check.outputs.version_changed == 'true' && '✅ Yes' || '⏭️ No' }}"
                  if [ "${{ steps.version_check.outputs.version_changed }}" = "true" ]; then
                    echo "**Version Update:** ${{ steps.version_check.outputs.old_version }} → ${{ steps.version_check.outputs.new_version }}"
                    echo ""
                    echo "🎉 **When this PR is merged to master:**"
                    echo "- ✅ All validations will run"
                    echo "- 🏷️ Tag ${{ steps.version.outputs.version }} will be created automatically"
                    echo "- 📦 Release workflow will be triggered"
                    echo "- 🚀 GitHub release will be published"
                  else
                    echo ""
                    echo "💡 **Note:** Since version wasn't changed, merging this PR will:"
                    echo "- ✅ Run all validations"
                    echo "- ⏭️ Skip tag creation (version already exists)"
                  fi
                  echo ""
                  echo "**All Checks:** ✅ Passed"
